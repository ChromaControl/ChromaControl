###############################
# Core EditorConfig Options   #
###############################

root = true

# All files
[*]
indent_style = space
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = true

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# .NET code files
[*.{cs,csx,vb,vbx,razor,cshtml}]
indent_size = 4
charset = utf-8-bom

[*.json]
indent_size = 2

###############################
# .NET Coding Conventions     #
###############################

[*.{cs,vb}]

# Simplify name
dotnet_diagnostic.IDE0001.severity = warning

# Simplify member access
dotnet_diagnostic.IDE0002.severity = warning

# this and Me preferences
dotnet_diagnostic.IDE0003.severity = warning
dotnet_diagnostic.IDE0009.severity = warning
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_property = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_event = false

# Remove unnecessary cast
dotnet_diagnostic.IDE0004.severity = warning

# Remove unnecessary import
dotnet_diagnostic.IDE0005.severity = warning

# var preferences
dotnet_diagnostic.IDE0007.severity = warning
dotnet_diagnostic.IDE0008.severity = warning
csharp_style_var_for_built_in_types = true
csharp_style_var_when_type_is_apparent = true
csharp_style_var_elsewhere = true

# Add missing cases to switch statement
dotnet_diagnostic.IDE0010.severity = silent

# Add braces
dotnet_diagnostic.IDE0011.severity = warning
csharp_prefer_braces = true

# Use throw expression
dotnet_diagnostic.IDE0016.severity = warning
csharp_style_throw_expression = true

# Use object initializers
dotnet_diagnostic.IDE0017.severity = warning
dotnet_style_object_initializer = true

# Inline variable declaration
dotnet_diagnostic.IDE0018.severity = warning
csharp_style_inlined_variable_declaration = true

# Use pattern matching to avoid as followed by a null check
dotnet_diagnostic.IDE0019.severity = warning
csharp_style_pattern_matching_over_as_with_null_check = true

# Use pattern matching to avoid 'is' check followed by a cast
dotnet_diagnostic.IDE0020.severity = warning
dotnet_diagnostic.IDE0038.severity = warning
csharp_style_pattern_matching_over_is_with_cast_check = true

# Use expression body for constructors
dotnet_diagnostic.IDE0021.severity = warning
csharp_style_expression_bodied_constructors = false

# Use expression body for methods
dotnet_diagnostic.IDE0022.severity = warning
csharp_style_expression_bodied_methods = false

# Use expression body for operators
dotnet_diagnostic.IDE0023.severity = warning
dotnet_diagnostic.IDE0024.severity = warning
csharp_style_expression_bodied_operators = false

# Use expression body for properties
dotnet_diagnostic.IDE0025.severity = warning
csharp_style_expression_bodied_properties = true

# Use expression body for indexers
dotnet_diagnostic.IDE0026.severity = warning
csharp_style_expression_bodied_indexers = true

# Use expression body for accessors
dotnet_diagnostic.IDE0027.severity = warning
csharp_style_expression_bodied_accessors = true

# Use collection initializers
dotnet_diagnostic.IDE0028.severity = warning
dotnet_style_collection_initializer = true

# Use coalesce expression
dotnet_diagnostic.IDE0029.severity = warning
dotnet_diagnostic.IDE0030.severity = warning
dotnet_style_coalesce_expression = true

# Use null propagation
dotnet_diagnostic.IDE0031.severity = warning
dotnet_style_null_propagation = true

# Use auto property
dotnet_diagnostic.IDE0032.severity = warning
dotnet_style_prefer_auto_properties = true

# Use explicitly provided tuple name
dotnet_diagnostic.IDE0033.severity = warning
dotnet_style_explicit_tuple_names = true

# Simplify default expression
dotnet_diagnostic.IDE0034.severity = warning
csharp_prefer_simple_default_expression = true

# Remove unreachable code
dotnet_diagnostic.IDE0035.severity = warning

# Order modifiers
dotnet_diagnostic.IDE0036.severity = warning
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async
visual_basic_preferred_modifier_order = Partial,Default,Private,Protected,Public,Friend,NotOverridable,Overridable,MustOverride,Overloads,Overrides,MustInherit,NotInheritable,Static,Shared,Shadows,ReadOnly,WriteOnly,Dim,Const,WithEvents,Widening,Narrowing,Custom,Async

# Use inferred member name
dotnet_diagnostic.IDE0037.severity = warning
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_inferred_anonymous_type_member_names = true

# Use local function instead of lambda
dotnet_diagnostic.IDE0039.severity = warning
csharp_style_pattern_local_over_anonymous_function = true

# Add accessibility modifiers
dotnet_diagnostic.IDE0040.severity = warning
dotnet_style_require_accessibility_modifiers = true

# Use is null check
dotnet_diagnostic.IDE0041.severity = warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true

# Deconstruct variable declaration
dotnet_diagnostic.IDE0042.severity = warning
csharp_style_deconstructed_variable_declaration = true

# Add readonly modifier
dotnet_diagnostic.IDE0044.severity = warning
dotnet_style_readonly_field = true

# Use conditional expression for assignment
dotnet_diagnostic.IDE0045.severity = warning
dotnet_style_prefer_conditional_expression_over_assignment = false

# Use conditional expression for return
dotnet_diagnostic.IDE0046.severity = warning
dotnet_style_prefer_conditional_expression_over_return = false

# Parentheses preferences
dotnet_diagnostic.IDE0047.severity = warning
dotnet_diagnostic.IDE0048.severity = warning
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_operators = never_if_unnecessary

# Use language keywords instead of framework type names for type references
dotnet_diagnostic.IDE0049.severity = warning
dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true

# Remove unused private member
dotnet_diagnostic.IDE0051.severity = warning

# Remove unread private member
dotnet_diagnostic.IDE0052.severity = warning

# Use expression body for lambdas
dotnet_diagnostic.IDE0053.severity = warning
csharp_style_expression_bodied_lambdas = when_on_single_line

# Use compound assignment
dotnet_diagnostic.IDE0054.severity = warning
dotnet_style_prefer_compound_assignment = true

# Fix formatting
dotnet_diagnostic.IDE0055.severity = warning

dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false
dotnet_style_namespace_match_folder = true

csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents_when_block = true

csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_declaration_statements = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false

csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true

csharp_style_namespace_declarations = file_scoped

# Use index operator
dotnet_diagnostic.IDE0056.severity = warning
csharp_style_prefer_index_operator = true

# Use range operator
dotnet_diagnostic.IDE0057.severity = warning
csharp_style_prefer_range_operator = true

# Remove unused expression value
dotnet_diagnostic.IDE0058.severity = silent
csharp_style_unused_value_expression_statement_preference = discard_variable
visual_basic_style_unused_value_expression_statement_preference = unused_local_variable

# Remove unnecessary value assignment
dotnet_diagnostic.IDE0059.severity = warning
csharp_style_unused_value_assignment_preference = discard_variable
visual_basic_style_unused_value_expression_statement_preference = unused_local_variable

# Remove unused parameter
dotnet_diagnostic.IDE0060.severity = warning
dotnet_code_quality_unused_parameters = all

# Use expression body for local functions
dotnet_diagnostic.IDE0061.severity = warning
csharp_style_expression_bodied_local_functions = when_on_single_line

# Make local function static
dotnet_diagnostic.IDE0062.severity = warning
csharp_prefer_static_local_function = true

# Use simple using statement
dotnet_diagnostic.IDE0063.severity = warning
csharp_prefer_simple_using_statement = true

# Make struct fields writable
dotnet_diagnostic.IDE0064.severity = warning

# using directive placement
dotnet_diagnostic.IDE0065.severity = warning
csharp_using_directive_placement = outside_namespace

# Use switch expression
dotnet_diagnostic.IDE0066.severity = warning
csharp_style_prefer_switch_expression = true

# Use System.HashCode.Combine
dotnet_diagnostic.IDE0070.severity = warning

# Simplify interpolation
dotnet_diagnostic.IDE0071.severity = warning
dotnet_style_prefer_simplified_interpolation = true

# Add missing cases to switch expression
dotnet_diagnostic.IDE0072.severity = silent

# Use file header
dotnet_diagnostic.IDE0073.severity = warning
file_header_template = Licensed to the Chroma Control Contributors under one or more agreements.\nThe Chroma Control Contributors licenses this file to you under the MIT license.\nSee the LICENSE file in the project root for more information.

# Use coalesce compound assignment
dotnet_diagnostic.IDE0074.severity = warning
dotnet_style_prefer_compound_assignment = true

# Simplify conditional expression
dotnet_diagnostic.IDE0075.severity = warning
dotnet_style_prefer_simplified_boolean_expressions = true

# Remove invalid global SuppressMessageAttribute
dotnet_diagnostic.IDE0076.severity = warning

# Avoid legacy format target in global SuppressMessageAttribute
dotnet_diagnostic.IDE0077.severity = warning

# Use pattern matching
dotnet_diagnostic.IDE0078.severity = warning
csharp_style_prefer_pattern_matching = true

# Remove unnecessary suppression
dotnet_diagnostic.IDE0079.severity = warning
dotnet_remove_unnecessary_suppression_exclusions = none

# Remove unnecessary suppression operator
dotnet_diagnostic.IDE0080.severity = warning

# Remove ByVal
dotnet_diagnostic.IDE0081.severity = warning

# Convert typeof to nameof
dotnet_diagnostic.IDE0082.severity = warning

# Use pattern matching (not operator)
dotnet_diagnostic.IDE0083.severity = warning
csharp_style_prefer_not_pattern = true

# Use pattern matching (IsNot operator)
dotnet_diagnostic.IDE0084.severity = warning
visual_basic_style_prefer_isnot_expression = true

# Simplify new expression
dotnet_diagnostic.IDE0090.severity = warning
csharp_style_implicit_object_creation_when_type_is_apparent = true

# Remove unnecessary equality operator
dotnet_diagnostic.IDE0100.severity = warning

# Remove unnecessary discard
dotnet_diagnostic.IDE0110.severity = warning

# Simplify object creation
dotnet_diagnostic.IDE0140.severity = warning
visual_basic_style_prefer_simplified_object_creation = true

# Use conditional delegate call
dotnet_diagnostic.IDE1005.severity = warning
csharp_style_conditional_delegate_call = true

# Naming styles
dotnet_diagnostic.IDE1006.severity = warning

dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style
dotnet_naming_symbols.non_private_static_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_static_fields.required_modifiers = static
dotnet_naming_style.non_private_static_field_style.capitalization = pascal_case

dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.symbols = non_private_readonly_fields
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.style = non_private_readonly_field_style
dotnet_naming_symbols.non_private_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_readonly_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_readonly_fields.required_modifiers = readonly
dotnet_naming_style.non_private_readonly_field_style.capitalization = pascal_case

dotnet_naming_rule.constants_should_be_pascal_case.severity = warning
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = constant_style
dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const
dotnet_naming_style.constant_style.capitalization = pascal_case

dotnet_naming_rule.static_fields_should_be_camel_case.severity = warning
dotnet_naming_rule.static_fields_should_be_camel_case.symbols = static_fields
dotnet_naming_rule.static_fields_should_be_camel_case.style = static_field_style
dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.required_modifiers = static
dotnet_naming_style.static_field_style.capitalization = camel_case
dotnet_naming_style.static_field_style.required_prefix = s_

dotnet_naming_rule.instance_fields_should_be_camel_case.severity = warning
dotnet_naming_rule.instance_fields_should_be_camel_case.symbols = instance_fields
dotnet_naming_rule.instance_fields_should_be_camel_case.style = instance_field_style
dotnet_naming_symbols.instance_fields.applicable_kinds = field
dotnet_naming_style.instance_field_style.capitalization = camel_case
dotnet_naming_style.instance_field_style.required_prefix = _

dotnet_naming_rule.locals_should_be_camel_case.severity = warning
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style
dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local
dotnet_naming_style.camel_case_style.capitalization = camel_case

dotnet_naming_rule.local_functions_should_be_pascal_case.severity = warning
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style
dotnet_naming_symbols.local_functions.applicable_kinds = local_function
dotnet_naming_style.local_function_style.capitalization = pascal_case

dotnet_naming_rule.members_should_be_pascal_case.severity = warning
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style
dotnet_naming_symbols.all_members.applicable_kinds = *
dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# Do not declare static members on generic types
dotnet_diagnostic.CA1000.severity = silent

# Types that own disposable fields should be disposable
dotnet_diagnostic.CA1001.severity = silent

# Do not expose generic lists
dotnet_diagnostic.CA1002.severity = none

# Use generic event handler instances
dotnet_diagnostic.CA1003.severity = none

# Avoid excessive parameters on generic types
dotnet_diagnostic.CA1005.severity = none

# Enums should have zero value
dotnet_diagnostic.CA1008.severity = none

# Generic interface should also be implemented
dotnet_diagnostic.CA1010.severity = silent

# Abstract types should not have public constructors
dotnet_diagnostic.CA1012.severity = none

# Mark assemblies with CLSCompliant
dotnet_diagnostic.CA1014.severity = none

# Mark assemblies with assembly version
dotnet_diagnostic.CA1016.severity = warning

# Mark assemblies with ComVisible
dotnet_diagnostic.CA1017.severity = none

# Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.CA1018.severity = warning

# Define accessors for attribute arguments
dotnet_diagnostic.CA1019.severity = none

# Avoid out parameters
dotnet_diagnostic.CA1021.severity = none

# Use properties where appropriate
dotnet_diagnostic.CA1024.severity = none

# Mark enums with FlagsAttribute
dotnet_diagnostic.CA1027.severity = none

# Enum Storage should be Int32
dotnet_diagnostic.CA1028.severity = none

# Use events where appropriate
dotnet_diagnostic.CA1030.severity = none

# Do not catch general exception types
dotnet_diagnostic.CA1031.severity = none

# Implement standard exception constructors
dotnet_diagnostic.CA1032.severity = none

# Interface methods should be callable by child types
dotnet_diagnostic.CA1033.severity = none

# Nested types should not be visible
dotnet_diagnostic.CA1034.severity = none

# Override methods on comparable types
dotnet_diagnostic.CA1036.severity = silent

# Avoid empty interfaces
dotnet_diagnostic.CA1040.severity = none

# Provide ObsoleteAttribute message
dotnet_diagnostic.CA1041.severity = warning

# Use Integral Or String Argument For Indexers
dotnet_diagnostic.CA1043.severity = none

# Properties should not be write only
dotnet_diagnostic.CA1044.severity = none

# Do not pass types by reference
dotnet_diagnostic.CA1045.severity = none

# Do not overload equality operator on reference types
dotnet_diagnostic.CA1046.severity = none

# Do not declare protected member in sealed type
dotnet_diagnostic.CA1047.severity = warning

# Declare types in namespaces
dotnet_diagnostic.CA1050.severity = warning

# Do not declare visible instance fields
dotnet_diagnostic.CA1051.severity = silent

# Static holder types should be Static or NotInheritable
dotnet_diagnostic.CA1052.severity = none

# URI-like parameters should not be strings
dotnet_diagnostic.CA1054.severity = none

# URI-like return values should not be strings
dotnet_diagnostic.CA1055.severity = none

# URI-like properties should not be strings
dotnet_diagnostic.CA1056.severity = none

# Types should not extend certain base types
dotnet_diagnostic.CA1058.severity = none

# Move pinvokes to native methods class
dotnet_diagnostic.CA1060.severity = none

# Do not hide base class methods
dotnet_diagnostic.CA1061.severity = warning

# Validate arguments of public methods
dotnet_diagnostic.CA1062.severity = none

# Implement IDisposable Correctly
dotnet_diagnostic.CA1063.severity = none

# Exceptions should be public
dotnet_diagnostic.CA1064.severity = none

# Do not raise exceptions in unexpected locations
dotnet_diagnostic.CA1065.severity = none

# Implement IEquatable when overriding Object.Equals
dotnet_diagnostic.CA1066.severity = none

# Override Object.Equals(object) when implementing IEquatable<T>
dotnet_diagnostic.CA1067.severity = warning

# CancellationToken parameters must come last
dotnet_diagnostic.CA1068.severity = warning

# Enums values should not be duplicated
dotnet_diagnostic.CA1069.severity = warning

# Do not declare event fields as virtual
dotnet_diagnostic.CA1070.severity = warning

# Avoid using cref tags with a prefix
dotnet_diagnostic.CA1200.severity = silent

# Do not pass literals as localized parameters
dotnet_diagnostic.CA1303.severity = none

# Specify CultureInfo
dotnet_diagnostic.CA1304.severity = silent

# Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = silent

# Specify StringComparison for clarity
dotnet_diagnostic.CA1307.severity = none

# Normalize strings to uppercase
dotnet_diagnostic.CA1308.severity = none

# Use ordinal string comparison
dotnet_diagnostic.CA1309.severity = silent

# Specify StringComparison for correctness
dotnet_diagnostic.CA1310.severity = silent

# P/Invokes should not be visible
dotnet_diagnostic.CA1401.severity = warning

# Validate platform compatibility
dotnet_diagnostic.CA1416.severity = warning

# Do not use 'OutAttribute' on string parameters for P/Invokes
dotnet_diagnostic.CA1417.severity = warning

# Use valid platform string
dotnet_diagnostic.CA1418.severity = warning

# Provide a parameterless constructor that is as visible as the containing type for concrete types derived from 'System.Runtime.InteropServices.SafeHandle'
dotnet_diagnostic.CA1419.severity = warning

# Avoid excessive inheritance
dotnet_diagnostic.CA1501.severity = none

# Avoid excessive complexity
dotnet_diagnostic.CA1502.severity = none

# Avoid unmaintainable code
dotnet_diagnostic.CA1505.severity = none

# Avoid excessive class coupling
dotnet_diagnostic.CA1506.severity = none

# Use nameof to express symbol names
dotnet_diagnostic.CA1507.severity = warning

# Avoid dead conditional code
dotnet_diagnostic.CA1508.severity = none

# Invalid entry in code metrics rule specification file
dotnet_diagnostic.CA1509.severity = none

# Do not name enum values 'Reserved'
dotnet_diagnostic.CA1700.severity = none

# Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = silent

# Identifiers should differ by more than case
dotnet_diagnostic.CA1708.severity = silent

# Identifiers should have correct suffix
dotnet_diagnostic.CA1710.severity = silent

# Identifiers should not have incorrect suffix
dotnet_diagnostic.CA1711.severity = silent

# Do not prefix enum values with type name
dotnet_diagnostic.CA1712.severity = silent

# Events should not have 'Before' or 'After' prefix
dotnet_diagnostic.CA1713.severity = none

# Identifiers should have correct prefix
dotnet_diagnostic.CA1715.severity = silent

# Identifiers should not match keywords
dotnet_diagnostic.CA1716.severity = silent

# Identifier contains type name
dotnet_diagnostic.CA1720.severity = silent

# Property names should not match get methods
dotnet_diagnostic.CA1721.severity = none

# Type names should not match namespaces
dotnet_diagnostic.CA1724.severity = none

# Parameter names should match base declaration
dotnet_diagnostic.CA1725.severity = silent

# Use PascalCase for named placeholders
dotnet_diagnostic.CA1727.severity = silent

# Use literals where appropriate
dotnet_diagnostic.CA1802.severity = none

# Do not initialize unnecessarily
dotnet_diagnostic.CA1805.severity = silent

# Do not ignore method results
dotnet_diagnostic.CA1806.severity = warning

# Initialize reference type static fields inline
dotnet_diagnostic.CA1810.severity = none

# Avoid uninstantiated internal classes
dotnet_diagnostic.CA1812.severity = none

# Avoid unsealed attributes
dotnet_diagnostic.CA1813.severity = none

# Prefer jagged arrays over multidimensional
dotnet_diagnostic.CA1814.severity = none

# Override equals and operator equals on value types
dotnet_diagnostic.CA1815.severity = none

# Dispose methods should call SuppressFinalize
dotnet_diagnostic.CA1816.severity = warning

# Properties should not return arrays
dotnet_diagnostic.CA1819.severity = none

# Test for empty strings using string length
dotnet_diagnostic.CA1820.severity = none

# Remove empty Finalizers
dotnet_diagnostic.CA1821.severity = warning

# Mark members as static
dotnet_diagnostic.CA1822.severity = warning

# Avoid unused private fields
dotnet_diagnostic.CA1823.severity = none

# Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.CA1824.severity = warning

# Avoid zero-length array allocations
dotnet_diagnostic.CA1825.severity = warning

# Do not use Enumerable methods on indexable collections
dotnet_diagnostic.CA1826.severity = warning

# Do not use Count() or LongCount() when Any() can be used
dotnet_diagnostic.CA1827.severity = warning

# Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used
dotnet_diagnostic.CA1828.severity = warning

# Use Length/Count property instead of Count() when available
dotnet_diagnostic.CA1829.severity = warning

# Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.CA1830.severity = warning

# Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1831.severity = warning

# Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1832.severity = warning

# Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1833.severity = warning

# Consider using 'StringBuilder.Append(char)' when applicable
dotnet_diagnostic.CA1834.severity = warning

# Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.CA1835.severity = warning

# Prefer IsEmpty over Count
dotnet_diagnostic.CA1836.severity = warning

# Use 'Environment.ProcessId'
dotnet_diagnostic.CA1837.severity = warning

# Avoid 'StringBuilder' parameters for P/Invokes
dotnet_diagnostic.CA1838.severity = silent

# Use 'Environment.ProcessPath'
dotnet_diagnostic.CA1839.severity = warning

# Use 'Environment.CurrentManagedThreadId'
dotnet_diagnostic.CA1840.severity = warning

# Prefer Dictionary.Contains methods
dotnet_diagnostic.CA1841.severity = warning

# Do not use 'WhenAll' with a single task
dotnet_diagnostic.CA1842.severity = warning

# Do not use 'WaitAll' with a single task
dotnet_diagnostic.CA1843.severity = warning

# Provide memory-based overrides of async methods when subclassing 'Stream'
dotnet_diagnostic.CA1844.severity = warning

# Use span-based 'string.Concat'
dotnet_diagnostic.CA1845.severity = warning

# Prefer 'AsSpan' over 'Substring'
dotnet_diagnostic.CA1846.severity = warning

# Use char literal for a single character lookup
dotnet_diagnostic.CA1847.severity = warning

# Use the LoggerMessage delegates
dotnet_diagnostic.CA1848.severity = silent

# Call async methods when in an async method
dotnet_diagnostic.CA1849.severity = none

# Dispose objects before losing scope
dotnet_diagnostic.CA2000.severity = none

# Do not lock on objects with weak identity
dotnet_diagnostic.CA2002.severity = none

# Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = none

# Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.CA2008.severity = none

# Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.CA2009.severity = warning

# Avoid infinite recursion
dotnet_diagnostic.CA2011.severity = warning

# Use ValueTasks correctly
dotnet_diagnostic.CA2012.severity = warning

# Do not use ReferenceEquals with value types
dotnet_diagnostic.CA2013.severity = warning

# Do not use stackalloc in loops
dotnet_diagnostic.CA2014.severity = warning

# Do not define finalizers for types derived from MemoryManager<T>
dotnet_diagnostic.CA2015.severity = warning

# Forward the 'CancellationToken' parameter to methods
dotnet_diagnostic.CA2016.severity = warning

# Parameter count mismatch
dotnet_diagnostic.CA2017.severity = warning

# 'Buffer.BlockCopy' expects the number of bytes to be copied for the 'count' argument
dotnet_diagnostic.CA2018.severity = warning

# Review SQL queries for security vulnerabilities
dotnet_diagnostic.CA2100.severity = none

# Specify marshaling for P/Invoke string arguments
dotnet_diagnostic.CA2101.severity = warning

# Review visible event handlers
dotnet_diagnostic.CA2109.severity = none

# Seal methods that satisfy private interfaces
dotnet_diagnostic.CA2119.severity = none

# Do Not Catch Corrupted State Exceptions
dotnet_diagnostic.CA2153.severity = none

# Rethrow to preserve stack details
dotnet_diagnostic.CA2200.severity = warning

# Do not raise reserved exception types
dotnet_diagnostic.CA2201.severity = silent

# Initialize value type static fields inline
dotnet_diagnostic.CA2207.severity = none

# Instantiate argument exceptions correctly
dotnet_diagnostic.CA2208.severity = warning

# Non-constant fields should not be visible
dotnet_diagnostic.CA2211.severity = warning

# Disposable fields should be disposed
dotnet_diagnostic.CA2213.severity = none

# Do not call overridable methods in constructors
dotnet_diagnostic.CA2214.severity = none

# Dispose methods should call base class dispose
dotnet_diagnostic.CA2215.severity = silent

# Disposable types should declare finalizer
dotnet_diagnostic.CA2216.severity = none

# Do not mark enums with FlagsAttribute
dotnet_diagnostic.CA2217.severity = none

# Override GetHashCode on overriding Equals
dotnet_diagnostic.CA2218.severity = warning

# Do not raise exceptions in finally clauses
dotnet_diagnostic.CA2219.severity = warning

# Override Equals on overloading operator equals
dotnet_diagnostic.CA2224.severity = warning

# Operator overloads have named alternates
dotnet_diagnostic.CA2225.severity = none

# Operators should have symmetrical overloads
dotnet_diagnostic.CA2226.severity = none

# Collection properties should be read only
dotnet_diagnostic.CA2227.severity = none

# Implement serialization constructors
dotnet_diagnostic.CA2229.severity = silent

# Overload operator equals on overriding value type Equals
dotnet_diagnostic.CA2231.severity = warning

# Pass system uri objects instead of strings
dotnet_diagnostic.CA2234.severity = none

# Mark all non-serializable fields
dotnet_diagnostic.CA2235.severity = none

# Mark ISerializable types with serializable
dotnet_diagnostic.CA2237.severity = none

# Provide correct arguments to formatting methods
dotnet_diagnostic.CA2241.severity = warning

# Test for NaN correctly
dotnet_diagnostic.CA2242.severity = warning

# Attribute string literals should parse correctly
dotnet_diagnostic.CA2243.severity = none

# Do not duplicate indexed element initializations
dotnet_diagnostic.CA2244.severity = warning

# Do not assign a property to itself
dotnet_diagnostic.CA2245.severity = warning

# Assigning symbol and its member in the same statement
dotnet_diagnostic.CA2246.severity = warning

# Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum
dotnet_diagnostic.CA2247.severity = warning

# Provide correct 'enum' argument to 'Enum.HasFlag'
dotnet_diagnostic.CA2248.severity = warning

# Consider using 'string.Contains' instead of 'string.IndexOf'
dotnet_diagnostic.CA2249.severity = warning

# Use 'ThrowIfCancellationRequested'
dotnet_diagnostic.CA2250.severity = warning

# Use 'string.Equals'
dotnet_diagnostic.CA2251.severity = silent

# This API requires opting into preview features
dotnet_diagnostic.CA2252.severity = error

# Named placeholders should not be numeric values
dotnet_diagnostic.CA2253.severity = warning

# Template should be a static expression
dotnet_diagnostic.CA2254.severity = warning

# The 'ModuleInitializer' attribute should not be used in libraries
dotnet_diagnostic.CA2255.severity = warning

# All members declared in parent interfaces must have an implementation in a DynamicInterfaceCastableImplementation-attributed interface
dotnet_diagnostic.CA2256.severity = warning

# Members defined on an interface with the 'DynamicInterfaceCastableImplementationAttribute' should be 'static'
dotnet_diagnostic.CA2257.severity = warning

# Providing a 'DynamicInterfaceCastableImplementation' interface in Visual Basic is unsupported
dotnet_diagnostic.CA2258.severity = warning

# Do not use insecure deserializer BinaryFormatter
dotnet_diagnostic.CA2300.severity = none

# Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder
dotnet_diagnostic.CA2301.severity = none

# Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize
dotnet_diagnostic.CA2302.severity = none

# Do not use insecure deserializer LosFormatter
dotnet_diagnostic.CA2305.severity = none

# Do not use insecure deserializer NetDataContractSerializer
dotnet_diagnostic.CA2310.severity = none

# Do not deserialize without first setting NetDataContractSerializer.Binder
dotnet_diagnostic.CA2311.severity = none

# Ensure NetDataContractSerializer.Binder is set before deserializing
dotnet_diagnostic.CA2312.severity = none

# Do not use insecure deserializer ObjectStateFormatter
dotnet_diagnostic.CA2315.severity = none

# Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver
dotnet_diagnostic.CA2321.severity = none

# Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing
dotnet_diagnostic.CA2322.severity = none

# Do not use TypeNameHandling values other than None
dotnet_diagnostic.CA2326.severity = none

# Do not use insecure JsonSerializerSettings
dotnet_diagnostic.CA2327.severity = none

# Ensure that JsonSerializerSettings are secure
dotnet_diagnostic.CA2328.severity = none

# Do not deserialize with JsonSerializer using an insecure configuration
dotnet_diagnostic.CA2329.severity = none

# Ensure that JsonSerializer has a secure configuration when deserializing
dotnet_diagnostic.CA2330.severity = none

# Do not use DataTable.ReadXml() with untrusted data
dotnet_diagnostic.CA2350.severity = none

# Do not use DataSet.ReadXml() with untrusted data
dotnet_diagnostic.CA2351.severity = none

# Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2352.severity = none

# Unsafe DataSet or DataTable in serializable type
dotnet_diagnostic.CA2353.severity = none

# Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2354.severity = none

# Unsafe DataSet or DataTable type found in deserializable object graph
dotnet_diagnostic.CA2355.severity = none

# Unsafe DataSet or DataTable type in web deserializable object graph
dotnet_diagnostic.CA2356.severity = none

# Ensure auto-generated class containing DataSet.ReadXml() is not used with untrusted data
dotnet_diagnostic.CA2361.severity = none

# Unsafe DataSet or DataTable in auto-generated serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2362.severity = none

# Review code for SQL injection vulnerabilities
dotnet_diagnostic.CA3001.severity = none

# Review code for XSS vulnerabilities
dotnet_diagnostic.CA3002.severity = none

# Review code for file path injection vulnerabilities
dotnet_diagnostic.CA3003.severity = none

# Review code for information disclosure vulnerabilities
dotnet_diagnostic.CA3004.severity = none

# Review code for LDAP injection vulnerabilities
dotnet_diagnostic.CA3005.severity = none

# Review code for process command injection vulnerabilities
dotnet_diagnostic.CA3006.severity = none

# Review code for open redirect vulnerabilities
dotnet_diagnostic.CA3007.severity = none

# Review code for XPath injection vulnerabilities
dotnet_diagnostic.CA3008.severity = none

# Review code for XML injection vulnerabilities
dotnet_diagnostic.CA3009.severity = none

# Review code for XAML injection vulnerabilities
dotnet_diagnostic.CA3010.severity = none

# Review code for DLL injection vulnerabilities
dotnet_diagnostic.CA3011.severity = none

# Review code for regex injection vulnerabilities
dotnet_diagnostic.CA3012.severity = none

# Do Not Add Schema By URL
dotnet_diagnostic.CA3061.severity = silent

# Insecure DTD processing in XML
dotnet_diagnostic.CA3075.severity = silent

# Insecure XSLT script processing.
dotnet_diagnostic.CA3076.severity = silent

# Insecure Processing in API Design, XmlDocument and XmlTextReader
dotnet_diagnostic.CA3077.severity = silent

# Mark Verb Handlers With Validate Antiforgery Token
dotnet_diagnostic.CA3147.severity = silent

# Do Not Use Weak Cryptographic Algorithms
dotnet_diagnostic.CA5350.severity = silent

# Do Not Use Broken Cryptographic Algorithms
dotnet_diagnostic.CA5351.severity = silent

# Review cipher mode usage with cryptography experts
dotnet_diagnostic.CA5358.severity = none

# Do Not Disable Certificate Validation
dotnet_diagnostic.CA5359.severity = silent

# Do Not Call Dangerous Methods In Deserialization
dotnet_diagnostic.CA5360.severity = silent

# Do Not Disable SChannel Use of Strong Crypto
dotnet_diagnostic.CA5361.severity = none

# Potential reference cycle in deserialized object graph
dotnet_diagnostic.CA5362.severity = none

# Do Not Disable Request Validation
dotnet_diagnostic.CA5363.severity = silent

# Do Not Use Deprecated Security Protocols
dotnet_diagnostic.CA5364.severity = silent

# Do Not Disable HTTP Header Checking
dotnet_diagnostic.CA5365.severity = silent

# Use XmlReader for 'DataSet.ReadXml()'
dotnet_diagnostic.CA5366.severity = silent

# Do Not Serialize Types With Pointer Fields
dotnet_diagnostic.CA5367.severity = none

# Set ViewStateUserKey For Classes Derived From Page
dotnet_diagnostic.CA5368.severity = silent

# Use XmlReader for 'XmlSerializer.Deserialize()'
dotnet_diagnostic.CA5369.severity = silent

# Use XmlReader for XmlValidatingReader constructor
dotnet_diagnostic.CA5370.severity = silent

# Use XmlReader for 'XmlSchema.Read()'
dotnet_diagnostic.CA5371.severity = silent

# Use XmlReader for XPathDocument constructor
dotnet_diagnostic.CA5372.severity = silent

# Do not use obsolete key derivation function
dotnet_diagnostic.CA5373.severity = silent

# Do Not Use XslTransform
dotnet_diagnostic.CA5374.severity = silent

# Do Not Use Account Shared Access Signature
dotnet_diagnostic.CA5375.severity = none

# Use SharedAccessProtocol HttpsOnly
dotnet_diagnostic.CA5376.severity = none

# Use Container Level Access Policy
dotnet_diagnostic.CA5377.severity = none

# Do not disable ServicePointManagerSecurityProtocols
dotnet_diagnostic.CA5378.severity = none

# Ensure Key Derivation Function algorithm is sufficiently strong
dotnet_diagnostic.CA5379.severity = silent

# Do Not Add Certificates To Root Store
dotnet_diagnostic.CA5380.severity = none

# Ensure Certificates Are Not Added To Root Store
dotnet_diagnostic.CA5381.severity = none

# Use Secure Cookies In ASP.NET Core
dotnet_diagnostic.CA5382.severity = none

# Ensure Use Secure Cookies In ASP.NET Core
dotnet_diagnostic.CA5383.severity = none

# Do Not Use Digital Signature Algorithm (DSA)
dotnet_diagnostic.CA5384.severity = silent

# Use Rivest–Shamir–Adleman (RSA) Algorithm With Sufficient Key Size
dotnet_diagnostic.CA5385.severity = silent

# Avoid hardcoding SecurityProtocolType value
dotnet_diagnostic.CA5386.severity = none

# Do Not Use Weak Key Derivation Function With Insufficient Iteration Count
dotnet_diagnostic.CA5387.severity = none

# Ensure Sufficient Iteration Count When Using Weak Key Derivation Function
dotnet_diagnostic.CA5388.severity = none

# Do Not Add Archive Item's Path To The Target File System Path
dotnet_diagnostic.CA5389.severity = none

# Do not hard-code encryption key
dotnet_diagnostic.CA5390.severity = none

# Use antiforgery tokens in ASP.NET Core MVC controllers
dotnet_diagnostic.CA5391.severity = none

# Use DefaultDllImportSearchPaths attribute for P/Invokes
dotnet_diagnostic.CA5392.severity = none

# Do not use unsafe DllImportSearchPath value
dotnet_diagnostic.CA5393.severity = none

# Do not use insecure randomness
dotnet_diagnostic.CA5394.severity = none

# Miss HttpVerb attribute for action methods
dotnet_diagnostic.CA5395.severity = none

# Set HttpOnly to true for HttpCookie
dotnet_diagnostic.CA5396.severity = none

# Do not use deprecated SslProtocols values
dotnet_diagnostic.CA5397.severity = silent

# Avoid hardcoded SslProtocols values
dotnet_diagnostic.CA5398.severity = none

# HttpClients should enable certificate revocation list checks
dotnet_diagnostic.CA5399.severity = none

# Ensure HttpClient certificate revocation list check is not disabled
dotnet_diagnostic.CA5400.severity = none

# Do not use CreateEncryptor with non-default IV
dotnet_diagnostic.CA5401.severity = none

# Use CreateEncryptor with the default IV 
dotnet_diagnostic.CA5402.severity = none

# Do not hard-code certificate
dotnet_diagnostic.CA5403.severity = none

# Do not disable token validation checks
dotnet_diagnostic.CA5404.severity = none

# Do not always skip token validation in delegates
dotnet_diagnostic.CA5405.severity = none
